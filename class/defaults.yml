parameters:
  appcat:
    images:
      provider-kubernetes:
        registry: docker.io
        repository: crossplane/provider-kubernetes
        tag: v0.4.0
      provider-exoscale:
        registry: ghcr.io
        repository: vshn/provider-exoscale/provider
        tag: v0.8.1
      provider-cloudscale:
        registry: ghcr.io
        repository: vshn/provider-cloudscale/provider
        tag: v0.5.0

    providers:
      cloudscale:
        enabled: false
        connectionSecretNamespace: syn-provider-cloudscale-secrets
        credentials:
          name: cloudscale-api-token
          namespace: ${crossplane:namespace}
          data:
            CLOUDSCALE_API_TOKEN: '?{vaultkv:${cluster:tenant}/${cluster:name}/appcat/objectstorage/provider-cloudscale/token}'
        spec:
          package: ${appcat:images:provider-cloudscale:registry}/${appcat:images:provider-cloudscale:repository}:${appcat:images:provider-cloudscale:tag}
        controllerConfig: {}
        providerConfig: {}


      exoscale:
        enabled: false
        connectionSecretNamespace: syn-provider-exoscale-secrets
        credentials:
          name: exoscale-api-access
          namespace: ${crossplane:namespace}
          data:
            EXOSCALE_API_KEY: '?{vaultkv:${cluster:tenant}/${cluster:name}/appcat/provider-exoscale/access-key}'
            EXOSCALE_API_SECRET: '?{vaultkv:${cluster:tenant}/${cluster:name}/appcat/provider-exoscale/secret-key}'
        spec:
          package: ${appcat:images:provider-exoscale:registry}/${appcat:images:provider-exoscale:repository}:${appcat:images:provider-exoscale:tag}
        controllerConfig: {}
        providerConfig: {}

      kubernetes:
        enabled: false
        namespace:  ${crossplane:namespace}
        spec:
          package: ${appcat:images:provider-kubernetes:registry}/${appcat:images:provider-kubernetes:repository}:${appcat:images:provider-kubernetes:tag}
        controllerConfig:
          serviceAccountName: provider-kubernetes
        providerConfig: {}

    services:
      vshn:
        enabled: false
        secretNamespace: ${crossplane:namespace}
        postgres:
          # bucket_region: 'lpg' || 'ch-gva-2' 
          bucket_region: ''
          # bucket_endpoint: 'objects.lpg.cloudscale.ch' || sos-ch-gva-2.exo.io
          bucket_endpoint: ''
          enabled: true
          enableNetworkPolicy: true
          secretNamespace: ${appcat:services:vshn:secretNamespace}

      # Config for exoscale composites
      exoscale:
        enabled: false
        secretNamespace: ${crossplane:namespace}
        providerSecretNamespace: ${appcat:providers:exoscale:connectionSecretNamespace}
        mysql:
          enabled: true
          secretNamespace: ${appcat:services:exoscale:secretNamespace}
          providerSecretNamespace: ${appcat:services:exoscale:providerSecretNamespace}
        postgres:
          enabled: true
          secretNamespace: ${appcat:services:exoscale:secretNamespace}
          providerSecretNamespace: ${appcat:services:exoscale:providerSecretNamespace}
        redis:
          enabled: true
          secretNamespace: ${appcat:services:exoscale:secretNamespace}
          providerSecretNamespace: ${appcat:services:exoscale:providerSecretNamespace}
        kafka:
          enabled: true
          secretNamespace: ${appcat:services:exoscale:secretNamespace}
          providerSecretNamespace: ${appcat:services:exoscale:providerSecretNamespace}
        opensearch:
          enabled: true
          secretNamespace: ${appcat:services:exoscale:secretNamespace}
          providerSecretNamespace: ${appcat:services:exoscale:providerSecretNamespace}

      # Config for "generic" vendor agnositc composites that have more than one matching composition
      generic:
        objectstorage:
          enabled: false

          defaultComposition: ${facts:cloud}
          # Compositions that provide a composition for the composite with it's configuration
          compositions:
            exoscale:
              enabled: true
              secretNamespace: ${appcat:services:generic:objectstorage:secretNamespace}
              providerSecretNamespace: ${appcat:providers:exoscale:connectionSecretNamespace}
              bucketDeletionPolicy: ${appcat:services:generic:objectstorage:bucketDeletionPolicy}
            cloudscale:
              enabled: true
              secretNamespace: ${appcat:services:generic:objectstorage:secretNamespace}
              providerSecretNamespace: ${appcat:providers:cloudscale:connectionSecretNamespace}
              bucketDeletionPolicy: ${appcat:services:generic:objectstorage:bucketDeletionPolicy}

          # Generic config for objecstorage composite
          secretNamespace: ${crossplane:namespace}
          bucketDeletionPolicy: DeleteAll
