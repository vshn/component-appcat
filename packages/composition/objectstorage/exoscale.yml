classes:
  - .common

parameters:
  pkg.appcat.composition.objectstorage.exoscale:
    secretNamespaces:
      iamkeys: syn-provider-exoscale-secrets
    bucketDeletionPolicy: DeleteAll

  appcat:
    compositions:
      "exoscale.objectbuckets.appcat.vshn.io":
        commonPatchSets:
          annotations: {}
          labels: {}
        spec:
          compositeTypeRef:
            apiVersion: appcat.vshn.io/v1
            kind: XObjectBucket
          writeConnectionSecretsToNamespace: ${crossplane:namespace}
          resources:

            - base:
                apiVersion: exoscale.crossplane.io/v1
                kind: IAMKey
                metadata: {} # patched
                spec:
                  forProvider:
                    keyName: "" # patched
                    # The zone is exposed as region in XRD
                    zone: "" # patched
                    services:
                      sos:
                        buckets:
                          - "" # patched
                  writeConnectionSecretToRef:
                    name: "" # patched
                    namespace: ${pkg.appcat.composition.objectstorage.exoscale:secretNamespaces:iamkeys}
                  providerConfigRef:
                    name: exoscale
              connectionDetails:
                - fromConnectionSecretKey: AWS_ACCESS_KEY_ID
                  type: FromConnectionSecretKey
                  name: AWS_ACCESS_KEY_ID
                - fromConnectionSecretKey: AWS_SECRET_ACCESS_KEY
                  type: FromConnectionSecretKey
                  name: AWS_SECRET_ACCESS_KEY
              patches:
                - type: PatchSet
                  patchSetName: annotations
                - type: PatchSet
                  patchSetName: labels
                - type: FromCompositeFieldPath
                  fromFieldPath: metadata.labels[crossplane.io/composite]
                  toFieldPath: metadata.name
                - type: ToCompositeFieldPath
                  fromFieldPath: status.conditions
                  toFieldPath: status.accessUserConditions
                - type: FromCompositeFieldPath
                  fromFieldPath: metadata.labels[crossplane.io/composite]
                  toFieldPath: spec.writeConnectionSecretToRef.name
                # Set key name
                - type: CombineFromComposite
                  toFieldPath: spec.forProvider.keyName
                  combine:
                    variables:
                      - fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
                      - fromFieldPath: metadata.labels[crossplane.io/claim-name]
                    strategy: string
                    string:
                      fmt: "%s.%s"
                # Set zone
                - type: FromCompositeFieldPath
                  fromFieldPath: spec.parameters.region
                  toFieldPath: spec.forProvider.zone
                # Set bucket
                - type: FromCompositeFieldPath
                  fromFieldPath: spec.parameters.bucketName
                  toFieldPath: spec.forProvider.services.sos.buckets[0]

            - base:
                apiVersion: exoscale.crossplane.io/v1
                kind: Bucket
                metadata: {} # patched
                spec:
                  forProvider:
                    bucketName: "" # patched
                    # The zone is exposed as region in XRD
                    zone: "" # patched
                    bucketDeletionPolicy: ${pkg.appcat.composition.objectstorage.exoscale:bucketDeletionPolicy}
                  providerConfigRef:
                    name: exoscale
              connectionDetails:
                - fromFieldPath: status.endpoint
                  type: FromFieldPath
                  name: ENDPOINT
                - fromFieldPath: status.endpointURL
                  type: FromFieldPath
                  name: ENDPOINT_URL
                - fromFieldPath: spec.forProvider.zone
                  type: FromFieldPath
                  name: AWS_REGION
                - fromFieldPath: status.atProvider.bucketName
                  type: FromFieldPath
                  name: BUCKET_NAME
              patches:
                - type: PatchSet
                  patchSetName: annotations
                - type: PatchSet
                  patchSetName: labels
                - type: FromCompositeFieldPath
                  fromFieldPath: metadata.labels[crossplane.io/composite]
                  toFieldPath: metadata.name
                - type: ToCompositeFieldPath
                  fromFieldPath: status.conditions
                  toFieldPath: status.bucketConditions
                - type: FromCompositeFieldPath
                  fromFieldPath: spec.parameters.bucketName
                  toFieldPath: spec.forProvider.bucketName
                # Set region
                - type: FromCompositeFieldPath
                  fromFieldPath: spec.parameters.region
                  toFieldPath: spec.forProvider.zone
