apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - patch
  - apiGroups:
      - pkg.crossplane.io
    resources:
      - locks
    verbs:
      - get
      - patch
      - list
  - apiGroups:
      - pkg.crossplane.io
    resources:
      - providers
    verbs:
      - get
      - patch
      - list
  - apiGroups:
      - pkg.crossplane.io
    resources:
      - configurations
    verbs:
      - get
      - patch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crossplane-crd-upgrade
subjects:
  - kind: ServiceAccount
    name: crossplane-crd-upgrade
    namespace: syn-crossplane
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        name: crossplane-crd-upgrade
    spec:
      containers:
        - args:
            - -eu
            - -c
            - "#!/bin/bash\nset -e\n\n#Patch CRDS so that ArgoCD does not delete them\
              \ during upgrade\nfor crd in $CRDS_TO_PATCH; do\n\tif ! kubectl get\
              \ crd \"${crd}\" >/dev/null 2>&1; then\n\t\techo >&2 \"WARNING: Skipping\
              \ '${crd}': not found.\"\n\t\tcontinue\n\tfi\n\n\t#Remove ArgoCD managed-by\
              \ label from the CRD\n\tkubectl label crd \"${crd}\" argocd.argoproj.io/instance-\n\
              done\n\n#Locks are not managed anymore in the helm chart therefore remove\
              \ them from ArgoCD sync cycle\nfor lock in $(kubectl get locks -o name);\
              \ do\n\t#Remove ArgoCD managed-by label from the Lock\n\tkubectl label\
              \ \"$lock\" argocd.argoproj.io/instance-\ndone\n\n#Patch providers so\
              \ that ArgoCD does not delete them during upgrade\nfor provider in $(kubectl\
              \ get providers -o name); do\n\t#Annotate ArgoCD sync-options\n\tkubectl\
              \ annotate \"$provider\" --overwrite argocd.argoproj.io/sync-options=Prune=false\n\
              done\n\n#Patch configurations so that ArgoCD does not delete them during\
              \ upgrade\nfor configuration in $(kubectl get configurations -o name);\
              \ do\n\t#Annotate ArgoCD sync-options\n\tkubectl annotate \"$configuration\"\
              \ --overwrite argocd.argoproj.io/sync-options=Prune=false\ndone\n"
          command:
            - sh
          env:
            - name: CRDS_TO_PATCH
              value: compositeresourcedefinitions.apiextensions.crossplane.io providerrevisions.pkg.crossplane.io
                configurationrevisions.pkg.crossplane.io controllerconfigs.pkg.crossplane.io
                configurations.pkg.crossplane.io locks.pkg.crossplane.io compositions.apiextensions.crossplane.io
                providers.pkg.crossplane.io
            - name: HOME
              value: /upgrade
          image: docker.io/bitnami/kubectl:1.24.3
          imagePullPolicy: IfNotPresent
          name: crossplane-crd-upgrade
          ports: []
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /upgrade
              name: upgrade
      imagePullSecrets: []
      initContainers: []
      restartPolicy: OnFailure
      serviceAccountName: crossplane-crd-upgrade
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: upgrade
