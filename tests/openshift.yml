parameters:
  kapitan:
    dependencies:
      - type: https
        source: https://raw.githubusercontent.com/projectsyn/component-crossplane/v2.3.0/lib/crossplane.libsonnet
        output_path: vendor/lib/crossplane.libsonnet
      - type: https
        source: https://raw.githubusercontent.com/appuio/component-openshift4-operators/v1.5.0/lib/openshift4-operators.libsonnet
        output_path: vendor/lib/openshift4-operators.libsonnet

  facts:
    cloud: exoscale
    distribution: openshift4
    sales_order: "10431"

  global:
    appuio_metered_billing_zone_label_map:
      c-green-test-1234: 'Kind - Local Test 0'

  crossplane:
    namespace: syn-crossplane

  openshift4_operators:
    defaultSourceNamespace: openshift-marketplace

  appcat:
    namespaceLabels:
      foo: bar
    namespaceAnnotations:
      openshift.io/node-selector: node-role.kubernetes.io/infra=

    providers:
      cloudscale:
        enabled: true
      exoscale:
        enabled: true
      kubernetes:
        enabled: true

    stackgres:
      operator:
        resources:
          limits:
            cpu: "2"
            memory: 1Gi

    services:
      vshn:
        enabled: true
        postgres:
          sgNamespace: stackgres
          bucket_region: 'ch-gva-2'
          bucket_endpoint: 'http://minio-server.minio:9000'
          additionalInputs:
            loadbalancerAnnotations: |
              foo: bar
          plans:
            standard-8:
              enabled: false
            plus-2:
              size: ${appcat:services:vshn:postgres:plans:standard-2:size}
              scheduling:
                nodeSelector:
                  appuio.io/node-class: "plus"
              note: "Will be scheduled on APPUiO Cloud plus nodes"
            plus-4:
              size: ${appcat:services:vshn:postgres:plans:standard-4:size}
              scheduling:
                nodeSelector:
                  appuio.io/node-class: "plus"
              note: "Will be scheduled on APPUiO Cloud plus nodes"
      generic:
        objectstorage:
          enabled: true
          compositions:
            cloudscale:
              enabled: false
      exoscale:
        enabled: true
