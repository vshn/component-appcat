apiVersion: batch/v1
kind: Job
metadata:
  name: connect-envoy-disabled
  namespace: appcat-e2e
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        e2e-test: postgresql-e2e
    spec:
      containers:
        - name: test-container
          image: alpine/k8s:1.31.7
          envFrom:
            - secretRef:
                name: postgresql-e2e-test-creds
          command: ["/bin/sh", "-c"]
          args:
            - |
              export KUBECONFIG=/configs/service-cluster/config
              echo "=== Creating PostgreSQL connectivity test job in service cluster ==="

              CA_CERT_CONTENT=$(cat /certs/ca.crt | base64 -w 0)
              JOB_NAME="postgresql-connectivity-test-$(date +%s)"
              cat <<EOF | kubectl apply -f -
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: ${JOB_NAME}
                namespace: appcat-e2e
                labels:
                  app: postgresql-connectivity-test
              spec:
                ttlSecondsAfterFinished: 300
                backoffLimit: 3
                template:
                  metadata:
                    labels:
                      app: postgresql-connectivity-test
                  spec:
                    restartPolicy: Never
                    containers:
                    - name: postgresql-connectivity-test
                      image: dockerhub.vshn.net/library/postgres:15
                      env:
                      - name: POSTGRESQL_USER
                        value: "${POSTGRESQL_USER}"
                      - name: POSTGRESQL_PASSWORD
                        value: "${POSTGRESQL_PASSWORD}"
                      - name: POSTGRESQL_HOST
                        value: "${POSTGRESQL_HOST}"
                      - name: POSTGRESQL_PORT
                        value: "${POSTGRESQL_PORT}"
                      - name: POSTGRESQL_DB
                        value: "${POSTGRESQL_DB}"
                      - name: CA_CERT
                        value: "${CA_CERT_CONTENT}"
                      command: ["/bin/bash"]
                      args:
                      - -c
                      - |
                        set -e
                        mkdir -p /tmp/postgresql-tls && echo "\$CA_CERT" | base64 -d > /tmp/postgresql-tls/ca.crt
                        until PGPASSWORD=\$POSTGRESQL_PASSWORD timeout 5 psql "sslmode=verify-full sslrootcert=/tmp/postgresql-tls/ca.crt host=\$POSTGRESQL_HOST port=\$POSTGRESQL_PORT dbname=\$POSTGRESQL_DB" -U \$POSTGRESQL_USER -c "select 1;"
                        do
                          sleep 1
                          echo "not ready"
                        done
                        echo '=== All PostgreSQL connectivity tests passed! ==='
              EOF

              kubectl wait --for=condition=complete --timeout=300s job/${JOB_NAME} -n appcat-e2e
              echo "=== PostgreSQL Connectivity Job finished ==="

              # Check job status and show logs
              kubectl logs job/${JOB_NAME} -n appcat-e2e

              if kubectl get job ${JOB_NAME} -n appcat-e2e -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep -q "True"; then
                echo "=== PostgreSQL connectivity tests completed successfully ==="
              else
                echo "=== PostgreSQL connectivity tests failed ==="
                kubectl describe job ${JOB_NAME} -n appcat-e2e
                exit 1
              fi
          volumeMounts:
            - name: service-cluster-config
              mountPath: /configs/service-cluster
            - name: postgresql-tls-secrets
              mountPath: /certs
              readOnly: true
      restartPolicy: Never
      volumes:
        - name: service-cluster-config
          secret:
            secretName: service-cluster-kubeconfig
        - name: postgresql-tls-secrets
          secret:
            secretName: postgresql-e2e-test-creds
            items:
              - key: ca.crt
                path: ca.crt
