apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '-60'
    metadata.appcat.vshn.io/description: Kafka DBaaS instances by Exoscale
    metadata.appcat.vshn.io/displayname: Exoscale Kafka
    metadata.appcat.vshn.io/end-user-docs-url: https://vs.hn/exo-kafka
    metadata.appcat.vshn.io/plans: |
      {"business-16":{"note":"kafka business-16","size":{"cpu":"4","disk":"2010Gi","memory":"16Gi"}},"business-32":{"note":"kafka business-32","size":{"cpu":"8","disk":"4020Gi","memory":"32Gi"}},"business-4":{"note":"kafka business-4","size":{"cpu":"2","disk":"480Gi","memory":"4Gi"}},"business-8":{"note":"kafka business-8","size":{"cpu":"4","disk":"960Gi","memory":"8Gi"}},"premium-15x-16":{"note":"kafka premium-15x-16","size":{"cpu":"4","disk":"10005Gi","memory":"16Gi"}},"premium-15x-32":{"note":"kafka premium-15x-32","size":{"cpu":"8","disk":"20010Gi","memory":"32Gi"}},"premium-15x-8":{"note":"kafka premium-15x-8","size":{"cpu":"4","disk":"5010Gi","memory":"8Gi"}},"premium-30x-16":{"note":"kafka premium-30x-16","size":{"cpu":"4","disk":"20010Gi","memory":"16Gi"}},"premium-30x-32":{"note":"kafka premium-30x-32","size":{"cpu":"8","disk":"40020Gi","memory":"32Gi"}},"premium-30x-8":{"note":"kafka premium-30x-8","size":{"cpu":"4","disk":"10020Gi","memory":"8Gi"}},"premium-6x-16":{"note":"kafka premium-6x-16","size":{"cpu":"4","disk":"4020Gi","memory":"16Gi"}},"premium-6x-32":{"note":"kafka premium-6x-32","size":{"cpu":"8","disk":"8010Gi","memory":"32Gi"}},"premium-6x-8":{"note":"kafka premium-6x-8","size":{"cpu":"4","disk":"2010Gi","memory":"8Gi"}},"premium-9x-16":{"note":"kafka premium-9x-16","size":{"cpu":"4","disk":"6003Gi","memory":"16Gi"}},"premium-9x-32":{"note":"kafka premium-9x-32","size":{"cpu":"8","disk":"12006Gi","memory":"32Gi"}},"premium-9x-8":{"note":"kafka premium-9x-8","size":{"cpu":"4","disk":"3006Gi","memory":"8Gi"}},"startup-2":{"note":"kafka startup-2","size":{"cpu":"2","disk":"90Gi","memory":"2Gi"}}}
    metadata.appcat.vshn.io/product-description: https://products.docs.vshn.ch/products/appcat/exoscale_dbaas.html
    metadata.appcat.vshn.io/zone: de-fra-1, de-muc-1, at-vie-1, ch-gva-2, ch-dk-2,
      bg-sof-1
  labels:
    metadata.appcat.vshn.io/offered: 'true'
    metadata.appcat.vshn.io/serviceID: exoscale-kafka
    name: exoscalekafka.exoscale.appcat.vshn.io
  name: exoscalekafka.exoscale.appcat.vshn.io
spec:
  compositeTypeRef:
    apiVersion: exoscale.appcat.vshn.io/v1
    kind: XExoscaleKafka
  resources:
    - base:
        apiVersion: exoscale.crossplane.io/v1
        kind: Kafka
        metadata: {}
        spec:
          forProvider:
            ipFilter: ''
            kafkaSettings: {}
            maintenance:
              dayOfWeek: ''
              timeOfDay: ''
            size:
              plan: ''
            terminationProtection: false
            version: ''
            zone: ''
          providerConfigRef:
            name: exoscale
          writeConnectionSecretToRef:
            name: ''
            namespace: syn-provider-exoscale-secrets
      connectionDetails:
        - fromConnectionSecretKey: KAFKA_URI
          name: KAFKA_URI
          type: FromConnectionSecretKey
        - fromConnectionSecretKey: KAFKA_HOST
          name: KAFKA_HOST
          type: FromConnectionSecretKey
        - fromConnectionSecretKey: KAFKA_PORT
          name: KAFKA_PORT
          type: FromConnectionSecretKey
        - fromConnectionSecretKey: KAFKA_NODES
          name: KAFKA_NODES
          type: FromConnectionSecretKey
        - fromConnectionSecretKey: service.cert
          name: service.cert
          type: FromConnectionSecretKey
        - fromConnectionSecretKey: service.key
          name: service.key
          type: FromConnectionSecretKey
        - fromConnectionSecretKey: ca.crt
          name: ca.crt
          type: FromConnectionSecretKey
      patches:
        - fromFieldPath: metadata.labels[crossplane.io/composite]
          toFieldPath: metadata.name
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.labels[crossplane.io/composite]
          toFieldPath: spec.writeConnectionSecretToRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.service.kafkaSettings
          toFieldPath: spec.forProvider.kafkaSettings
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.service.zone
          toFieldPath: spec.forProvider.zone
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.network.ipFilter
          toFieldPath: spec.forProvider.ipFilter
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.size.plan
          toFieldPath: spec.forProvider.size.plan
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.maintenance.dayOfWeek
          toFieldPath: spec.forProvider.maintenance.dayOfWeek
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.maintenance.timeOfDay
          toFieldPath: spec.forProvider.maintenance.timeOfDay
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.service.version
          toFieldPath: spec.forProvider.version
          type: FromCompositeFieldPath
        - fromFieldPath: status.atProvider.version
          toFieldPath: status.version
          type: ToCompositeFieldPath
        - fromFieldPath: spec.parameters.service.zone
          toFieldPath: metadata.annotations[appcat.vshn.io/cloudzone]
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
  writeConnectionSecretsToNamespace: syn-crossplane
