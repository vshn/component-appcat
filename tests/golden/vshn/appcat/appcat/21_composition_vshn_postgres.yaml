apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '10'
    metadata.appcat.vshn.io/description: PostgreSQL instances by VSHN
    metadata.appcat.vshn.io/displayname: PostgreSQL by VSHN
    metadata.appcat.vshn.io/end-user-docs-url: https://vs.hn/vshn-postgresql
    metadata.appcat.vshn.io/flavor: standalone
    metadata.appcat.vshn.io/plans: '{"plus-2":{"note":"Will be scheduled on APPUiO
      Cloud plus nodes","scheduling":{"nodeSelector":{"appuio.io/node-class":"plus"}},"size":{"cpu":"400m","disk":"20Gi","enabled":true,"memory":"1936Mi"}},"plus-4":{"note":"Will
      be scheduled on APPUiO Cloud plus nodes","scheduling":{"nodeSelector":{"appuio.io/node-class":"plus"}},"size":{"cpu":"900m","disk":"40Gi","enabled":true,"memory":"3984Mi"}},"standard-2":{"size":{"cpu":"400m","disk":"20Gi","enabled":true,"memory":"1936Mi"}},"standard-4":{"size":{"cpu":"900m","disk":"40Gi","enabled":true,"memory":"3984Mi"}}}'
    metadata.appcat.vshn.io/product-description: https://products.docs.vshn.ch/products/appcat/postgresql.html
    metadata.appcat.vshn.io/zone: rma1
  labels:
    metadata.appcat.vshn.io/offered: 'true'
    metadata.appcat.vshn.io/serviceID: vshn-postgresql
    name: vshnpostgres.vshn.appcat.vshn.io
  name: vshnpostgres.vshn.appcat.vshn.io
spec:
  compositeTypeRef:
    apiVersion: vshn.appcat.vshn.io/v1
    kind: XVSHNPostgreSQL
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-appcat
      input:
        apiVersion: v1
        data:
          bucketEndpoint: http://minio-server.minio:9000
          bucketRegion: ch-gva-2
          controlNamespace: syn-appcat-control
          crossplaneNamespace: syn-crossplane
          emailAlertingEnabled: 'true'
          emailAlertingSecretName: mailgun-smtp-credentials
          emailAlertingSecretNamespace: syn-appcat
          emailAlertingSmtpFromAddress: myuser@example.com
          emailAlertingSmtpHost: smtp.eu.mailgun.org:465
          emailAlertingSmtpUsername: myuser@example.com
          externalDatabaseConnectionsEnabled: 'true'
          imageTag: v4.91.0
          initContainers: '{"clusterReconciliationCycle": {"limits": {"cpu": "300m",
            "memory": "200Mi"}, "requests": {"cpu": "100m", "memory": "100Mi"}}, "pgbouncerAuthFile":
            {"limits": {"cpu": "300m", "memory": "500Mi"}, "requests": {"cpu": "100m",
            "memory": "100Mi"}}, "relocateBinaries": {"limits": {"cpu": "300m", "memory":
            "500Mi"}, "requests": {"cpu": "100m", "memory": "100Mi"}}, "setDbopsRunning":
            {"limits": {"cpu": "250m", "memory": "256Mi"}, "requests": {"cpu": "250m",
            "memory": "256Mi"}}, "setupArbitraryUser": {"limits": {"cpu": "300m",
            "memory": "500Mi"}, "requests": {"cpu": "100m", "memory": "500Mi"}}, "setupScripts":
            {"limits": {"cpu": "300m", "memory": "500Mi"}, "requests": {"cpu": "100m",
            "memory": "500Mi"}}}'
          isOpenshift: 'false'
          keepMetrics: '["pg_locks_count", "pg_postmaster_start_time_seconds", "pg_replication_lag",
            "pg_settings_effective_cache_size_bytes", "pg_settings_maintenance_work_mem_bytes",
            "pg_settings_max_connections", "pg_settings_max_parallel_workers", "pg_settings_max_wal_size_bytes",
            "pg_settings_max_worker_processes", "pg_settings_shared_buffers_bytes",
            "pg_settings_work_mem_bytes", "pg_stat_activity_count", "pg_stat_bgwriter_buffers_alloc_total",
            "pg_stat_bgwriter_buffers_backend_fsync_total", "pg_stat_bgwriter_buffers_backend_total",
            "pg_stat_bgwriter_buffers_checkpoint_total", "pg_stat_bgwriter_buffers_clean_total",
            "pg_stat_database_blks_hit", "pg_stat_database_blks_read", "pg_stat_database_conflicts",
            "pg_stat_database_deadlocks", "pg_stat_database_temp_bytes", "pg_stat_database_xact_commit",
            "pg_stat_database_xact_rollback", "pg_static", "pg_up", "pgbouncer_show_stats_total_xact_count",
            "pgbouncer_show_stats_totals_bytes_received", "pgbouncer_show_stats_totals_bytes_sent"]'
          loadbalancerAnnotations: |
            foo: bar
          ownerGroup: vshn.appcat.vshn.io
          ownerKind: XVSHNPostgreSQL
          ownerVersion: v1
          plans: '{"plus-2": {"note": "Will be scheduled on APPUiO Cloud plus nodes",
            "scheduling": {"nodeSelector": {"appuio.io/node-class": "plus"}}, "size":
            {"cpu": "400m", "disk": "20Gi", "enabled": true, "memory": "1936Mi"}},
            "plus-4": {"note": "Will be scheduled on APPUiO Cloud plus nodes", "scheduling":
            {"nodeSelector": {"appuio.io/node-class": "plus"}}, "size": {"cpu": "900m",
            "disk": "40Gi", "enabled": true, "memory": "3984Mi"}}, "standard-2": {"size":
            {"cpu": "400m", "disk": "20Gi", "enabled": true, "memory": "1936Mi"}},
            "standard-4": {"size": {"cpu": "900m", "disk": "40Gi", "enabled": true,
            "memory": "3984Mi"}}}'
          quotasEnabled: 'false'
          serviceName: postgresql
          sgNamespace: stackgres
          sideCars: '{"clusterController": {"limits": {"cpu": "32m", "memory": "256Mi"},
            "requests": {"cpu": "32m", "memory": "128Mi"}}, "createBackup": {"limits":
            {"cpu": "400m", "memory": "500Mi"}, "requests": {"cpu": "100m", "memory":
            "64Mi"}}, "envoy": {"limits": {"cpu": "64m", "memory": "64Mi"}, "requests":
            {"cpu": "32m", "memory": "64Mi"}}, "pgbouncer": {"limits": {"cpu": "32m",
            "memory": "20Mi"}, "requests": {"cpu": "16m", "memory": "4Mi"}}, "postgresUtil":
            {"limits": {"cpu": "20m", "memory": "20Mi"}, "requests": {"cpu": "10m",
            "memory": "4Mi"}}, "prometheusPostgresExporter": {"limits": {"cpu": "150m",
            "memory": "256Mi"}, "requests": {"cpu": "10m", "memory": "16Mi"}}, "runDbops":
            {"limits": {"cpu": "250m", "memory": "256Mi"}, "requests": {"cpu": "100m",
            "memory": "64Mi"}}, "setDbopsResult": {"limits": {"cpu": "250m", "memory":
            "256Mi"}, "requests": {"cpu": "100m", "memory": "64Mi"}}}'
          sliNamespace: appcat-slos
        kind: ConfigMap
        metadata:
          labels:
            name: xfn-config
          name: xfn-config
      step: pgsql-func
  writeConnectionSecretsToNamespace: syn-crossplane
