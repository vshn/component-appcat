apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '-80'
  labels:
    name: provider-helm
  name: provider-helm
spec:
  package: xpkg.upbound.io/upbound/provider-helm:v0.21.0
  runtimeConfigRef:
    name: provider-helm
---
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '-90'
  name: provider-helm
spec:
  deploymentTemplate:
    spec:
      selector: {}
      template:
        spec:
          containers:
            - name: package-runtime
              securityContext: {}
          securityContext: {}
          serviceAccountName: provider-helm
---
apiVersion: helm.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '-50'
  labels:
    name: helm
  name: helm
spec:
  credentials:
    source: InjectedIdentity
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '-100'
  labels:
    name: provider-helm
  name: provider-helm
  namespace: syn-crossplane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '-100'
  labels:
    name: crossplane-provider-provider-helm-system-custom
  name: crossplane:provider:provider-helm:system:custom
rules:
  - apiGroups:
      - helm.crossplane.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - ''
    resources:
      - namespaces
      - serviceaccounts
      - services
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - create
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '-100'
  labels:
    name: crossplane-provider-provider-helm-system-custom
  name: crossplane:provider:provider-helm:system:custom
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crossplane:provider:provider-helm:system:custom
subjects:
  - kind: ServiceAccount
    name: provider-helm
    namespace: syn-crossplane
---
apiVersion: helm.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '-50'
  labels:
    name: kind
  name: kind
spec:
  credentials:
    secretRef:
      key: kubeconfig
      name: kubeconfig-kind
      namespace: syn-crossplane
    source: Secret
