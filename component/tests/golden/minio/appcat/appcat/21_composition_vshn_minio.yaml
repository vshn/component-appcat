apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '10'
    metadata.appcat.vshn.io/description: Minio instances by VSHN
    metadata.appcat.vshn.io/displayname: Minio by VSHN
    metadata.appcat.vshn.io/end-user-docs-url: https://vs.hn/vshn-minio
    metadata.appcat.vshn.io/flavor: distributed
    metadata.appcat.vshn.io/plans: '{"standard-1":{"size":{"cpu":"1","disk":"50Gi","enabled":true,"memory":"1Gi"}}}'
    metadata.appcat.vshn.io/product-description: https://products.docs.vshn.ch/products/appcat/minio.html
  labels:
    metadata.appcat.vshn.io/offered: 'false'
    metadata.appcat.vshn.io/serviceID: vshn-minio
    name: vshnminio.vshn.appcat.vshn.io
  name: vshnminio.vshn.appcat.vshn.io
spec:
  compositeTypeRef:
    apiVersion: vshn.appcat.vshn.io/v1
    kind: XVSHNMinio
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-appcat
      input:
        apiVersion: v1
        data:
          controlNamespace: syn-appcat-control
          defaultPlan: standard-1
          imageTag: v4.51.0
          maintenanceSA: helm-based-service-maintenance
          minioChartRepository: https://charts.min.io
          minioChartVersion: 5.0.13
          plans: '{"standard-1": {"size": {"cpu": "1", "disk": "50Gi", "enabled":
            true, "memory": "1Gi"}}}'
          providerEnabled: 'false'
          serviceName: minio
        kind: ConfigMap
        metadata:
          labels:
            name: xfn-config
          name: xfn-config
      step: minio-func
    - functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata:
                name: prometheusrule
              spec:
                forProvider:
                  manifest:
                    apiVersion: monitoring.coreos.com/v1
                    kind: PrometheusRule
                    metadata:
                      name: minio-rules
                    spec:
                      groups:
                        - name: minio-storage
                          rules:
                            - alert: minioPersistentVolumeFillingUp
                              annotations:
                                description: The volume claimed by the instance {{
                                  $labels.name }} in namespace {{ $labels.label_appcat_vshn_io_claim_namespace
                                  }} is only {{ $value | humanizePercentage }} free.
                                runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                                summary: PersistentVolume is filling up.
                              expr: label_replace( bottomk(1, (kubelet_volume_stats_available_bytes{job="kubelet",
                                metrics_path="/metrics"} / kubelet_volume_stats_capacity_bytes{job="kubelet",
                                metrics_path="/metrics"}) < 0.03 and kubelet_volume_stats_used_bytes{job="kubelet",
                                metrics_path="/metrics"} > 0 unless on(namespace,
                                persistentvolumeclaim) kube_persistentvolumeclaim_access_mode{
                                access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                                persistentvolumeclaim) kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                                == 1) * on(namespace) group_left(label_appcat_vshn_io_claim_namespace)
                                kube_namespace_labels, "name", "$1", "namespace",
                                "vshn-minio-(.+)-.+")
                              for: 1m
                              labels:
                                severity: critical
                                syn_team: schedar
                            - alert: minioPersistentVolumeFillingUp
                              annotations:
                                description: Based on recent sampling, the volume
                                  claimed by the instance {{ $labels.name }} in namespace
                                  {{ $labels.label_appcat_vshn_io_claim_namespace
                                  }} is expected to fill up within four days. Currently
                                  {{ $value | humanizePercentage }} is available.
                                runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                                summary: PersistentVolume is filling up.
                              expr: label_replace( bottomk(1, (kubelet_volume_stats_available_bytes{job="kubelet",
                                metrics_path="/metrics"} / kubelet_volume_stats_capacity_bytes{job="kubelet",
                                metrics_path="/metrics"}) < 0.15 and kubelet_volume_stats_used_bytes{job="kubelet",
                                metrics_path="/metrics"} > 0 and predict_linear(kubelet_volume_stats_available_bytes{job="kubelet",
                                metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0  unless
                                on(namespace, persistentvolumeclaim) kube_persistentvolumeclaim_access_mode{
                                access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                                persistentvolumeclaim) kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                                == 1) * on(namespace) group_left(label_appcat_vshn_io_claim_namespace)
                                kube_namespace_labels, "name", "$1", "namespace",
                                "vshn-minio-(.+)-.+")
                              for: 1h
                              labels:
                                severity: warning
                        - name: minio-memory
                          rules:
                            - alert: minioMemoryCritical
                              annotations:
                                description: |-
                                  The memory claimed by the instance {{ $labels.name }} in namespace {{ $labels.label_appcat_vshn_io_claim_namespace }} has been over 85% for 2 hours.
                                    Please reducde the load of this instance, or increase the memory.
                                runbook_url: https://hub.syn.tools/appcat/runbooks/vshn-generic.html#MemoryCritical
                                summary: Memory usage critical
                              expr: label_replace( topk(1, (max(container_memory_working_set_bytes{container="minio"})
                                without (name, id)  / on(container,pod,namespace)  kube_pod_container_resource_limits{resource="memory"}
                                * 100) > 85) * on(namespace) group_left(label_appcat_vshn_io_claim_namespace)
                                kube_namespace_labels, "name", "$1", "namespace",
                                "vshn-minio-(.+)-.+")
                              for: 120m
                              labels:
                                severity: critical
                                syn_team: schedar
                        - name: minio-diskOffline
                          rules:
                            - alert: minioDiskOfflineCritical
                              annotations:
                                description: Minio server reports it's disk is down
                                  - {{ $labels.name }} in namespace {{ $labels.label_appcat_vshn_io_claim_namespace
                                  }}.
                                summary: Minio disk is offline for at least 30 seconds.
                              expr: minio_cluster_drive_offline_total != 0
                              for: 30s
                              labels:
                                severity: critical
                                syn_team: schedar
                providerConfigRef:
                  name: kubernetes
            name: prometheusrule
            patches:
              - fromFieldPath: metadata.labels[crossplane.io/composite]
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-prometheusrule'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels[crossplane.io/composite]
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-minio-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
      step: patch-and-transform
  writeConnectionSecretsToNamespace: syn-crossplane
