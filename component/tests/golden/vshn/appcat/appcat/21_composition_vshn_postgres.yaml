apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: '10'
    metadata.appcat.vshn.io/description: PostgreSQL instances by VSHN
    metadata.appcat.vshn.io/displayname: PostgreSQL by VSHN
    metadata.appcat.vshn.io/end-user-docs-url: https://vs.hn/vshn-postgresql
    metadata.appcat.vshn.io/flavor: standalone
    metadata.appcat.vshn.io/plans: '{"plus-2":{"note":"Will be scheduled on APPUiO
      Cloud plus nodes","scheduling":{"nodeSelector":{"appuio.io/node-class":"plus"}},"size":{"cpu":"400m","disk":"20Gi","enabled":true,"memory":"1936Mi"}},"plus-4":{"note":"Will
      be scheduled on APPUiO Cloud plus nodes","scheduling":{"nodeSelector":{"appuio.io/node-class":"plus"}},"size":{"cpu":"900m","disk":"40Gi","enabled":true,"memory":"3984Mi"}},"standard-2":{"size":{"cpu":"400m","disk":"20Gi","enabled":true,"memory":"1936Mi"}},"standard-4":{"size":{"cpu":"900m","disk":"40Gi","enabled":true,"memory":"3984Mi"}}}'
    metadata.appcat.vshn.io/product-description: https://products.docs.vshn.ch/products/appcat/postgresql.html
    metadata.appcat.vshn.io/zone: rma1
  labels:
    metadata.appcat.vshn.io/offered: 'true'
    metadata.appcat.vshn.io/serviceID: vshn-postgresql
    name: vshnpostgres.vshn.appcat.vshn.io
  name: vshnpostgres.vshn.appcat.vshn.io
spec:
  compositeTypeRef:
    apiVersion: vshn.appcat.vshn.io/v1
    kind: XVSHNPostgreSQL
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: cert-manager.io/v1
                    kind: Issuer
                    metadata:
                      name: ''
                      namespace: ''
                    spec:
                      selfSigned:
                        crlDistributionPoints: []
                providerConfigRef:
                  name: kubernetes
            name: local-ca
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.localCAConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-localca'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: cert-manager.io/v1
                    kind: Certificate
                    metadata:
                      name: ''
                      namespace: ''
                    spec:
                      dnsNames:
                        - vshn.appcat.vshn.ch
                      duration: 87600h
                      isCA: false
                      issuerRef:
                        group: cert-manager.io
                        kind: Issuer
                        name: ''
                      privateKey:
                        algorithm: RSA
                        encoding: PKCS1
                        size: 4096
                      renewBefore: 2400h
                      secretName: tls-certificate
                      subject:
                        organizations:
                          - vshn-appcat
                      usages:
                        - server auth
                        - client auth
                providerConfigRef:
                  name: kubernetes
            name: certificate
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.certificateConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-certificate'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.issuerRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - combine:
                  strategy: string
                  string:
                    fmt: '%s.vshn-postgresql-%s.svc.cluster.local'
                  variables:
                    - fromFieldPath: metadata.name
                    - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.dnsNames[0]
                type: CombineFromComposite
              - combine:
                  strategy: string
                  string:
                    fmt: '%s.vshn-postgresql-%s.svc'
                  variables:
                    - fromFieldPath: metadata.name
                    - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.dnsNames[1]
                type: CombineFromComposite
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: stackgres.io/v1
                    kind: SGInstanceProfile
                    metadata: {}
                    spec:
                      containers:
                        backup.create-backup:
                          cpu: 400m
                          memory: 500Mi
                        cluster-controller:
                          cpu: 32m
                          memory: 256Mi
                        dbops.run-dbops:
                          cpu: 250m
                          memory: 256Mi
                        dbops.set-dbops-result:
                          cpu: 250m
                          memory: 256Mi
                        envoy:
                          cpu: 64m
                          memory: 64Mi
                        pgbouncer:
                          cpu: 32m
                          memory: 20Mi
                        postgres-util:
                          cpu: 20m
                          memory: 20Mi
                        prometheus-postgres-exporter:
                          cpu: 150m
                          memory: 256Mi
                      cpu: ''
                      initContainers:
                        cluster-reconciliation-cycle:
                          cpu: 300m
                          memory: 200Mi
                        dbops.set-dbops-running:
                          cpu: 250m
                          memory: 256Mi
                        pgbouncer-auth-file:
                          cpu: 300m
                          memory: 500Mi
                        relocate-binaries:
                          cpu: 300m
                          memory: 500Mi
                        setup-arbitrary-user:
                          cpu: 300m
                          memory: 500Mi
                        setup-scripts:
                          cpu: 300m
                          memory: 500Mi
                      memory: ''
                      requests:
                        containers:
                          backup.create-backup:
                            cpu: 100m
                            memory: 64Mi
                          cluster-controller:
                            cpu: 32m
                            memory: 128Mi
                          dbops.run-dbops:
                            cpu: 100m
                            memory: 64Mi
                          dbops.set-dbops-result:
                            cpu: 100m
                            memory: 64Mi
                          envoy:
                            cpu: 32m
                            memory: 64Mi
                          pgbouncer:
                            cpu: 16m
                            memory: 4Mi
                          postgres-util:
                            cpu: 10m
                            memory: 4Mi
                          prometheus-postgres-exporter:
                            cpu: 10m
                            memory: 16Mi
                        cpu: null
                        initContainers:
                          cluster-reconciliation-cycle:
                            cpu: 100m
                            memory: 100Mi
                          dbops.set-dbops-running:
                            cpu: 250m
                            memory: 256Mi
                          pgbouncer-auth-file:
                            cpu: 100m
                            memory: 100Mi
                          relocate-binaries:
                            cpu: 100m
                            memory: 100Mi
                          setup-arbitrary-user:
                            cpu: 100m
                            memory: 500Mi
                          setup-scripts:
                            cpu: 100m
                            memory: 500Mi
                        memory: null
                providerConfigRef:
                  name: kubernetes
            name: profile
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.profileConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-profile'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.plan
                toFieldPath: spec.forProvider.manifest.spec.cpu
                transforms:
                  - map:
                      plus-2: 400m
                      plus-4: 900m
                      standard-2: 400m
                      standard-4: 900m
                    type: map
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.plan
                toFieldPath: spec.forProvider.manifest.spec.memory
                transforms:
                  - map:
                      plus-2: 1936Mi
                      plus-4: 3984Mi
                      standard-2: 1936Mi
                      standard-4: 3984Mi
                    type: map
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.memory
                toFieldPath: spec.forProvider.manifest.spec.memory
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.cpu
                toFieldPath: spec.forProvider.manifest.spec.cpu
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.requests.memory
                toFieldPath: spec.forProvider.manifest.spec.requests.memory
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.requests.cpu
                toFieldPath: spec.forProvider.manifest.spec.requests.cpu
                type: FromCompositeFieldPath
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: stackgres.io/v1
                    kind: SGPostgresConfig
                    metadata: {}
                    spec:
                      postgresVersion: ''
                      postgresql.conf: {}
                providerConfigRef:
                  name: kubernetes
            name: pg-conf
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.pgconfigConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-pgconf'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.service.majorVersion
                toFieldPath: spec.forProvider.manifest.spec.postgresVersion
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.service.pgSettings
                toFieldPath: spec.forProvider.manifest.spec[postgresql.conf]
                type: FromCompositeFieldPath
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: stackgres.io/v1
                    kind: SGCluster
                    metadata: {}
                    spec:
                      configurations:
                        backups:
                          - retention: 6
                            sgObjectStorage: ''
                        sgPostgresConfig: ''
                      instances: 1
                      nonProductionOptions:
                        enableSetClusterCpuRequests: true
                        enableSetClusterMemoryRequests: true
                        enableSetPatroniCpuRequests: true
                        enableSetPatroniMemoryRequests: true
                      pods:
                        persistentVolume:
                          size: ''
                        resources:
                          enableClusterLimitsRequirements: true
                      postgres:
                        ssl:
                          certificateSecretKeySelector:
                            key: tls.crt
                            name: tls-certificate
                          enabled: true
                          privateKeySecretKeySelector:
                            key: tls.key
                            name: tls-certificate
                        version: ''
                      sgInstanceProfile: ''
                providerConfigRef:
                  name: kubernetes
            name: cluster
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.pgclusterConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-cluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.plan
                toFieldPath: spec.forProvider.manifest.spec.pods.persistentVolume.size
                transforms:
                  - map:
                      plus-2: 20Gi
                      plus-4: 40Gi
                      standard-2: 20Gi
                      standard-4: 40Gi
                    type: map
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.disk
                toFieldPath: spec.forProvider.manifest.spec.pods.persistentVolume.size
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.size.plan
                toFieldPath: spec.forProvider.manifest.spec.pods.scheduling.nodeSelector
                transforms:
                  - map:
                      plus-2:
                        appuio.io/node-class: plus
                      plus-4:
                        appuio.io/node-class: plus
                      standard-2: {}
                      standard-4: {}
                    type: map
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.scheduling.nodeSelector
                toFieldPath: spec.forProvider.manifest.spec.pods.scheduling.nodeSelector
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.service.majorVersion
                toFieldPath: spec.forProvider.manifest.spec.postgres.version
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.sgInstanceProfile
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.configurations.sgPostgresConfig
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.configurations.backups[0].sgObjectStorage
                transforms:
                  - string:
                      fmt: sgbackup-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.backup.retention
                toFieldPath: spec.forProvider.manifest.spec.configurations.backups[0].retention
                type: FromCompositeFieldPath
          - base:
              apiVersion: appcat.vshn.io/v1
              kind: XObjectBucket
              metadata: {}
              spec:
                parameters:
                  bucketName: ''
                  region: us-east-1
                writeConnectionSecretToRef:
                  name: ''
                  namespace: ''
            name: pg-bucket
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.objectBackupConfigConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.parameters.bucketName
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.writeConnectionSecretToRef.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - string:
                      fmt: pgbucket-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: stackgres.io/v1beta1
                    kind: SGObjectStorage
                    metadata:
                      name: ''
                      namespace: ''
                    spec:
                      s3Compatible:
                        awsCredentials:
                          secretKeySelectors:
                            accessKeyId:
                              key: AWS_ACCESS_KEY_ID
                              name: ''
                            secretAccessKey:
                              key: AWS_SECRET_ACCESS_KEY
                              name: ''
                        bucket: ''
                        enablePathStyleAddressing: true
                        endpoint: http://minio-server.minio:9000
                        region: us-east-1
                      type: s3Compatible
                providerConfigRef:
                  name: kubernetes
            name: sg-backup
            patches:
              - fromFieldPath: status.conditions
                toFieldPath: status.objectBucketConditions
                type: ToCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-object-storage'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.name
                transforms:
                  - string:
                      fmt: sgbackup-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.s3Compatible.bucket
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.s3Compatible.awsCredentials.secretKeySelectors.accessKeyId.name
                transforms:
                  - string:
                      fmt: pgbucket-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.s3Compatible.awsCredentials.secretKeySelectors.secretAccessKey.name
                transforms:
                  - string:
                      fmt: pgbucket-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
          - base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              metadata: {}
              spec:
                forProvider:
                  manifest:
                    apiVersion: monitoring.coreos.com/v1
                    kind: PodMonitor
                    metadata:
                      name: postgresql-podmonitor
                    spec:
                      podMetricsEndpoints:
                        - metricRelabelings:
                            - action: keep
                              regex: (pg_locks_count|pg_postmaster_start_time_seconds|pg_replication_lag|pg_settings_effective_cache_size_bytes|pg_settings_maintenance_work_mem_bytes|pg_settings_max_connections|pg_settings_max_parallel_workers|pg_settings_max_wal_size_bytes|pg_settings_max_worker_processes|pg_settings_shared_buffers_bytes|pg_settings_work_mem_bytes|pg_stat_activity_count|pg_stat_bgwriter_buffers_alloc_total|pg_stat_bgwriter_buffers_backend_fsync_total|pg_stat_bgwriter_buffers_backend_total|pg_stat_bgwriter_buffers_checkpoint_total|pg_stat_bgwriter_buffers_clean_total|pg_stat_database_blks_hit|pg_stat_database_blks_read|pg_stat_database_conflicts|pg_stat_database_deadlocks|pg_stat_database_temp_bytes|pg_stat_database_xact_commit|pg_stat_database_xact_rollback|pg_static|pg_up|pgbouncer_show_stats_total_xact_count|pgbouncer_show_stats_totals_bytes_received|pgbouncer_show_stats_totals_bytes_sent)
                              sourceLabels:
                                - __name__
                          port: pgexporter
                      selector:
                        matchLabels:
                          app: StackGresCluster
                providerConfigRef:
                  name: kubernetes
            name: podmonitor
            patches:
              - fromFieldPath: metadata.name
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-podmonitor'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.selector.matchLabels[stackgres.io/cluster-name]
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.name
                toFieldPath: spec.forProvider.manifest.spec.namespaceSelector.matchNames[0]
                transforms:
                  - string:
                      fmt: vshn-postgresql-%s
                      type: Format
                    type: string
                type: FromCompositeFieldPath
      step: patch-and-transform
    - functionRef:
        name: function-appcat
      input:
        apiVersion: v1
        data:
          bucketRegion: us-east-1
          controlNamespace: syn-appcat-control
          emailAlertingEnabled: 'true'
          emailAlertingSecretName: mailgun-smtp-credentials
          emailAlertingSecretNamespace: syn-appcat
          emailAlertingSmtpFromAddress: myuser@example.com
          emailAlertingSmtpHost: smtp.eu.mailgun.org:465
          emailAlertingSmtpUsername: myuser@example.com
          externalDatabaseConnectionsEnabled: 'true'
          imageTag: keycloak_mariadb_alerting
          isOpenshift: 'false'
          loadbalancerAnnotations: |
            foo: bar
          ownerGroup: vshn.appcat.vshn.io
          ownerKind: XVSHNPostgreSQL
          ownerVersion: v1
          proxyEndpoint: host.docker.internal:9443
          quotasEnabled: 'false'
          serviceName: postgresql
          sgNamespace: stackgres
          sideCars: '{"clusterController": {"limits": {"cpu": "32m", "memory": "256Mi"},
            "requests": {"cpu": "32m", "memory": "128Mi"}}, "createBackup": {"limits":
            {"cpu": "400m", "memory": "500Mi"}, "requests": {"cpu": "100m", "memory":
            "64Mi"}}, "envoy": {"limits": {"cpu": "64m", "memory": "64Mi"}, "requests":
            {"cpu": "32m", "memory": "64Mi"}}, "pgbouncer": {"limits": {"cpu": "32m",
            "memory": "20Mi"}, "requests": {"cpu": "16m", "memory": "4Mi"}}, "postgresUtil":
            {"limits": {"cpu": "20m", "memory": "20Mi"}, "requests": {"cpu": "10m",
            "memory": "4Mi"}}, "prometheusPostgresExporter": {"limits": {"cpu": "150m",
            "memory": "256Mi"}, "requests": {"cpu": "10m", "memory": "16Mi"}}, "runDbops":
            {"limits": {"cpu": "250m", "memory": "256Mi"}, "requests": {"cpu": "100m",
            "memory": "64Mi"}}, "setDbopsResult": {"limits": {"cpu": "250m", "memory":
            "256Mi"}, "requests": {"cpu": "100m", "memory": "64Mi"}}}'
          sliNamespace: appcat-slos
        kind: ConfigMap
        metadata:
          labels:
            name: xfn-config
          name: xfn-config
      step: pgsql-func
  writeConnectionSecretsToNamespace: syn-crossplane
